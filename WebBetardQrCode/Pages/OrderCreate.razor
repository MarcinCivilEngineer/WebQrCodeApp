@page "/OrderCreate"
@using WebBetardQrCode
@using WebBetardQrCode.Models
@using WebBetardQRCodeLib.DataAccess
@using WebBetardQRCodeLib.Models
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using QRCoder
@using System.Drawing
@using System
@using Microsoft.AspNetCore.Components;

@inject IUserData userData
@inject IOrderData orderData
@inject NavigationManager navManager

<h1>Utwórz temat</h1>

<div>
    <div>
        <div>
            <button @onclick="GoBack">Wróć</button>
        </div>
        @if (orders is not null)
        {

        }
    <EditForm Model="order" OnValidSubmit="CreateOneTask">
        <DataAnnotationsValidator />
        <ValidationSummary />





        <div>
            <label for="task-number">Numer tematu</label>
            <div>Wprowadź numer nowego tematu</div>
            <InputText id="task-number" @bind-Value="order.NumberBET"></InputText>
        </div>

        <div>
            <label for="name">Nazwa tematu</label>
            <div>Wprowadź nazwe tematu</div>
            <InputText id="name" @bind-Value="order.Name"></InputText>
        </div>
        <div>
            <button type="submit">Wprowadź</button>
        </div>
    </EditForm>
    </div>
</div>

@code {
    private CreateOrderModel order = new();
    private List<OrderModel> orders;
    private UserModel loggedInUser;

    protected async override Task OnInitializedAsync()
    {
        orders = await orderData.GetAllOrdersAsync();

        //TODO - replace is user
        //loggedInUser = await userData.GetUser("6221dae2be389068486ea62d");

    }

    private void GoBack()
    {
        navManager.NavigateTo("/");
    }

    private async Task CreateOneTask()
    {
        OrderModel t = new();
        t.NumberBET = order.NumberBET;
        t.Name = order.Name;

        await orderData.CreateOrderAsync(t);
        order = new();
        navManager.NavigateTo("/OrderList");
    }
}
